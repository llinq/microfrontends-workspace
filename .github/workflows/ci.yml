name: Testing CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  NX_CLOUD_ACCESS_KEY: ${{ secrets.NX_CLOUD_ACCESS_KEY }}

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

  log-secrets:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Log secrets
        run: |
          echo "NX_CLOUD_ACCESS_TOKEN is set: ${{ secrets.NX_CLOUD_ACCESS_TOKEN != '' }}"
          echo "NX_CLOUD_ACCESS_KEY is set: ${{ secrets.NX_CLOUD_ACCESS_KEY != '' }}"

  build:
    runs-on: ubuntu-latest
    needs: log-secrets
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

      - name: Build
        run: npx nx run-many -t build

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: |
            dist
            .nx/cache
          key: ${{ runner.os }}-build-${{ github.sha }}

  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

      - name: Lint
        run: npx nx run-many -t lint

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

      - name: Restore build artifacts
        uses: actions/cache@v4
        with:
          path: |
            dist
            .nx/cache
          key: ${{ runner.os }}-build-${{ github.sha }}

      - name: Test
        run: npx nx run-many -t test

  cloud-ai-fix-ci:
    runs-on: ubuntu-latest
    needs: [install-dependencies, log-secrets, build, lint, test, ci]
    if: always()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Restore node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

      - name: NX Cloud AI fix-ci
        run: npx nx-cloud fix-ci